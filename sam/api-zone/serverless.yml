# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: api-zone # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: { "Fn::Join" : ["", ["arn:aws:dynamodb:","${self:provider.region}", ":*:*" ] ]  }

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
# zone
  zoneList:
    handler: bin/zoneList
    events:
      - http:
          path: zone
          method: get
          cors: true
  zoneGet:
    handler: bin/zoneGet
    events:
      - http:
          path: zone/{zoneid}
          method: get
          cors: true
  zonePut:
    handler: bin/zonePut
    events:
      - http:
          path: zone
          method: put
          cors: true
  zonePost:
    handler: bin/zonePost
    events:
      - http:
          path: zone
          method: post
          cors: true
  zoneDelete:
    handler: bin/zoneDelete
    events:
      - http:
          path: zone/{zoneid}
          method: delete
          cors: true
#  position
  positionList:
    handler: bin/positionList
    events:
      - http:
          path: position
          method: get
          cors: true
    positionGet:
      handler: bin/positionGet
      events:
        - http:
            path: position/{positionid}
            method: get
            cors: true
    positionPut:
      handler: bin/positionPut
      events:
        - http:
            path: position
            method: put
            cors: true
    positionPost:
      handler: bin/positionPost
      events:
        - http:
            path: position
            method: post
            cors: true

    positionDelete:
      handler: bin/positionDelete
      events:
        - http:
            path: position
            method: delete
            cors: true
#   zone template
  zoneTemplateList:
    handler: bin/zoneTemplateList
    events:
      - http:
          path: zone-template
          method: get
          cors: true
  zoneTemplateGet:
    handler: bin/zoneTemplateGet
    events:
      - http:
          path: zone-template/{templateid}
          method: get
          cors: true
  zoneTemplatePut:
    handler: bin/zoneTemplatePut
    events:
      - http:
          path: zone-template
          method: put
          cors: true
  zoneTemplatePost:
   handler: bin/zoneTemplatePost
   events:
     - http:
         path: zone-template
         method: post
         cors: true
  zoneTemplateDelete:
    handler: bin/zoneTemplateDelete
    events:
      - http:
          path: zone-template
          method: delete
          cors: true
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
