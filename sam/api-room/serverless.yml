# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: api-room # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: { "Fn::Join" : ["", ["arn:aws:dynamodb:","${self:provider.region}", ":*:*" ] ]  }

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
# room
  roomList:
    handler: bin/roomList
    events:
      - http:
          path: room
          method: get
          cors: true
  roomGet:
    handler: bin/roomGet
    events:
      - http:
          path: room/{roomid}
          method: get
          cors: true
  roomPut:
    handler: bin/roomPut
    events:
      - http:
          path: room
          method: put
          cors: true
  roomPost:
    handler: bin/roomPost
    events:
      - http:
          path: room
          method: post
          cors: true
  roomDelete:
    handler: bin/roomDelete
    events:
      - http:
          path: room/{roomid}
          method: delete
          cors: true
#  seat
  seatList:
    handler: bin/seatList
    events:
      - http:
          path: seat
          method: get
          cors: true
    seatGet:
      handler: bin/seatGet
      events:
        - http:
            path: seat/{seatid}
            method: get
            cors: true
    seatPost:
      handler: bin/seatPost
      events:
        - http:
            path: seat
            method: post
            cors: true
#   room template
  roomTemplateList:
    handler: bin/roomTemplateList
    events:
      - http:
          path: room-template
          method: get
          cors: true
  roomTemplateGet:
    handler: bin/roomTemplateGet
    events:
      - http:
          path: room-template
          method: get
          cors: true
  roomTemplatePut:
    handler: bin/roomTemplatePut
    events:
      - http:
          path: room-template
          method: put
          cors: true
  roomTemplatePost:
   handler: bin/roomTemplatePost
   events:
     - http:
         path: room-template
         method: post
         cors: true
  roomTemplateDelete:
    handler: bin/roomTemplateDelete
    events:
      - http:
          path: room-template
          method: delete
          cors: true
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
